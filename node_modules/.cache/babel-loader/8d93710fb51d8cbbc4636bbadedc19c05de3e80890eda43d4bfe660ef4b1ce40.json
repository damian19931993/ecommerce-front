{"ast":null,"code":"// src/utils/cartUtils.js\n\nexport const addToCart = product => {\n  let cart = JSON.parse(localStorage.getItem('cart')) || [];\n  const existingProduct = cart.find(item => item.id === product.id);\n  if (existingProduct) {\n    existingProduct.quantity += product.quantity;\n  } else {\n    cart.push(product);\n  }\n  localStorage.setItem('cart', JSON.stringify(cart));\n};\nexport const getCart = () => {\n  return JSON.parse(localStorage.getItem('cart')) || [];\n};\nexport const removeFromCart = productId => {\n  let cart = JSON.parse(localStorage.getItem('cart')) || [];\n  cart = cart.filter(item => item.id !== productId);\n  localStorage.setItem('cart', JSON.stringify(cart));\n};\nexport const updateProductQuantity = (productId, quantity) => {\n  let cart = JSON.parse(localStorage.getItem('cart')) || [];\n  const product = cart.find(item => item.id === productId);\n  if (product) {\n    product.quantity = quantity;\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n};","map":{"version":3,"names":["addToCart","product","cart","JSON","parse","localStorage","getItem","existingProduct","find","item","id","quantity","push","setItem","stringify","getCart","removeFromCart","productId","filter","updateProductQuantity"],"sources":["C:/Users/54116/Desktop/proyectos/Spring-boot/ecommerce-app-frontend/src/utils/cartUtils.js"],"sourcesContent":["// src/utils/cartUtils.js\r\n\r\nexport const addToCart = (product) => {\r\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    const existingProduct = cart.find(item => item.id === product.id);\r\n    if (existingProduct) {\r\n        existingProduct.quantity += product.quantity;\r\n    } else {\r\n        cart.push(product);\r\n    }\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n};\r\n\r\nexport const getCart = () => {\r\n    return JSON.parse(localStorage.getItem('cart')) || [];\r\n};\r\n\r\nexport const removeFromCart = (productId) => {\r\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    cart = cart.filter(item => item.id !== productId);\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n};\r\n\r\nexport const updateProductQuantity = (productId, quantity) => {\r\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    const product = cart.find(item => item.id === productId);\r\n    if (product) {\r\n        product.quantity = quantity;\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,SAAS,GAAIC,OAAO,IAAK;EAClC,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;EACzD,MAAMC,eAAe,GAAGL,IAAI,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKT,OAAO,CAACS,EAAE,CAAC;EACjE,IAAIH,eAAe,EAAE;IACjBA,eAAe,CAACI,QAAQ,IAAIV,OAAO,CAACU,QAAQ;EAChD,CAAC,MAAM;IACHT,IAAI,CAACU,IAAI,CAACX,OAAO,CAAC;EACtB;EACAI,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACZ,IAAI,CAAC,CAAC;AACtD,CAAC;AAED,OAAO,MAAMa,OAAO,GAAGA,CAAA,KAAM;EACzB,OAAOZ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;AACzD,CAAC;AAED,OAAO,MAAMU,cAAc,GAAIC,SAAS,IAAK;EACzC,IAAIf,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;EACzDJ,IAAI,GAAGA,IAAI,CAACgB,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKO,SAAS,CAAC;EACjDZ,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACZ,IAAI,CAAC,CAAC;AACtD,CAAC;AAED,OAAO,MAAMiB,qBAAqB,GAAGA,CAACF,SAAS,EAAEN,QAAQ,KAAK;EAC1D,IAAIT,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;EACzD,MAAML,OAAO,GAAGC,IAAI,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKO,SAAS,CAAC;EACxD,IAAIhB,OAAO,EAAE;IACTA,OAAO,CAACU,QAAQ,GAAGA,QAAQ;IAC3BN,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACZ,IAAI,CAAC,CAAC;EACtD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}